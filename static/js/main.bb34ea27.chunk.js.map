{"version":3,"sources":["Components/Interviews/index.js","Components/Homepage/index.js","Components/ScheduleInterview/index.js","App.js","index.js"],"names":["Interviews","useState","interviews","setIntervews","getInterviews","a","axios","get","res","data","deleteInterview","id","delete","updatedInterviews","filter","interview","_id","useEffect","className","length","map","moment","startTime","format","endTime","to","state","interviewData","date","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","onClick","e","HomePage","Date","participants","ScheduleInterview","setInterview","setParticipants","location","useLocation","history","createBrowserHistory","getParticipants","toAdd","participant","isAdmin","findIndex","part","userId","scheduleInterview","stime","etime","alert","put","headers","defaults","back","response","type","value","onChange","target","name","email","p","style","color","newParticipants","addParticipant","App","path","element","ReactDOM","render","basename","document","getElementById"],"mappings":"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","file":"static/js/main.bb34ea27.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./Interviews.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\n\r\nconst Interviews = () => {\r\n  const [interviews, setIntervews] = useState([]);\r\n\r\n  const getInterviews = async () => {\r\n    const res = await axios.get(\"https://backend-interview-portal.herokuapp.com/interviews\");\r\n    setIntervews(res.data);\r\n  };\r\n\r\n  const deleteInterview = async (id) => {\r\n    await axios.delete(`https://backend-interview-portal.herokuapp.com/deleteInterview/${id}`);\r\n\r\n    const updatedInterviews = interviews.filter((interview) => interview._id !== id);\r\n\r\n    setIntervews(updatedInterviews);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getInterviews();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"interviews\">\r\n      {interviews.length === 0 ? (\r\n        <p>No interviews scheduled for now!</p>\r\n      ) : (\r\n        <>\r\n          <div className=\"heading_row\">\r\n            <div className=\"id\">Interview Id</div>\r\n            <div className=\"timeHeading\">Start Time</div>\r\n            <div className=\"timeHeading\">End Time</div>\r\n            <div className=\"edit\">Edit</div>\r\n            <div className=\"delete\">Delete</div>\r\n          </div>\r\n          {interviews.map((interview, id) => {\r\n            return (\r\n              <div className=\"heading_row normal_row\" key={id}>\r\n                <div className=\"id\">{id + 1}</div>\r\n                <div className=\"timeHeading\">{moment(interview.startTime).format(\"D MMMM, YYYY @ h:mm a\")}</div>\r\n                <div className=\"timeHeading\">{moment(interview.endTime).format(\"D MMMM, YYYY @ h:mm a\")}</div>\r\n                <Link\r\n                  to=\"/scheduleInterview\"\r\n                  state={{\r\n                    interviewData: {\r\n                      ...interview,\r\n                      date: moment(interview.date).format(\"yyyy-MM-DD\"),\r\n                      startTime: moment(interview.startTime).format(\"HH:mm\"),\r\n                      endTime: moment(interview.endTime).format(\"HH:mm\"),\r\n                    },\r\n                  }}\r\n                  className=\"edit\">\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                    <path\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                      strokeWidth={2}\r\n                      d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\"\r\n                    />\r\n                  </svg>\r\n                </Link>\r\n                <div className=\"delete\" onClick={(e) => deleteInterview(interview._id)}>\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                    <path\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                      strokeWidth={2}\r\n                      d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"\r\n                    />\r\n                  </svg>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Interviews;\r\n","import React from \"react\";\r\nimport \"./Homepage.css\";\r\nimport Interviews from \"../Interviews\";\r\nimport { Link } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\n\r\nconst HomePage = () => {\r\n  return (\r\n    <div className=\"homepage__container\">\r\n      <div>\r\n        <h3 className=\"scheduled__interviews\">Scheduled Interviews</h3>\r\n        <Link\r\n          className=\"new_interview\"\r\n          to=\"/scheduleInterview\"\r\n          state={{\r\n            interviewData: {\r\n              date: moment(new Date()).format(\"yyyy-MM-DD\"),\r\n              startTime: moment(new Date()).format(\"HH:mm\"),\r\n              endTime: moment(new Date()).format(\"HH:mm\"),\r\n              participants: [],\r\n            },\r\n          }}>\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\r\n          </svg>\r\n          Schedule\r\n        </Link>\r\n      </div>\r\n      <Interviews />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport \"./ScheduleInterview.css\";\r\nimport { createBrowserHistory } from \"history\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\n\r\nconst ScheduleInterview = () => {\r\n  const [interview, setInterview] = useState({\r\n    date: moment(new Date()).format(\"yyyy-MM-DD\"),\r\n    startTime: moment(new Date()).format(\"HH:mm\"),\r\n    endTime: moment(new Date()).format(\"HH:mm\"),\r\n    participants: [],\r\n  });\r\n  const [participants, setParticipants] = useState([]);\r\n\r\n  const location = useLocation();\r\n  const history = createBrowserHistory();\r\n\r\n  useEffect(() => {\r\n    const getParticipants = async () => {\r\n      const res = await axios.get(\"https://backend-interview-portal.herokuapp.com/getParticipants\");\r\n\r\n      const toAdd = res.data.filter((participant) => !participant.isAdmin && interview.participants.findIndex((part) => part.userId === participant.userId) === -1);\r\n\r\n      setParticipants(toAdd);\r\n    };\r\n\r\n    getParticipants();\r\n  }, [interview]);\r\n\r\n  const scheduleInterview = async () => {\r\n    const stime = moment(`${interview.date} ${interview.startTime}`, \"YYYY-MM-DD HH:mm:ss\").format();\r\n    const etime = moment(`${interview.date} ${interview.endTime}`, \"YYYY-MM-DD HH:mm:ss\").format();\r\n\r\n    if (etime <= stime) {\r\n      alert(\"Please select valid interview timings!\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await axios.put(\r\n        \"https://backend-interview-portal.herokuapp.com/scheduleInterview\",\r\n        { ...interview, startTime: stime, endTime: etime },\r\n        {\r\n          headers: {\r\n            ...axios.defaults.headers,\r\n            \"Access-Control-Allow-Origin\": \"*\",\r\n          },\r\n        }\r\n      );\r\n      history.back();\r\n    } catch (error) {\r\n      alert(error.response.data);\r\n    }\r\n  };\r\n\r\n  const addParticipant = (p) => {\r\n    const newParticipants = participants.filter((participant) => participant.userId !== p.userId);\r\n    setParticipants(newParticipants);\r\n\r\n    setInterview({ ...interview, participants: [...interview.participants, p] });\r\n  };\r\n\r\n  const deleteParticipant = (p) => {\r\n    setParticipants([...participants, p]);\r\n\r\n    setInterview({ ...interview, participants: interview.participants.filter((participant) => participant.userId !== p.userId) });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const data = location.state.interviewData;\r\n    setInterview(data);\r\n  }, [location.state]);\r\n\r\n  return (\r\n    <div className=\"scheduleInterview\">\r\n      <div className=\"timeSelect\">\r\n        <div className=\"time\">\r\n          <h3>Date</h3>\r\n          <input type=\"date\" value={interview.date} onChange={(e) => setInterview({ ...interview, date: e.target.value })} />\r\n        </div>\r\n\r\n        <div className=\"time\">\r\n          <h3>Start Time</h3>\r\n          <input type=\"time\" value={interview.startTime} onChange={(e) => setInterview({ ...interview, startTime: e.target.value })} />\r\n        </div>\r\n\r\n        <div className=\"time\">\r\n          <h3>End Time</h3>\r\n          <input type=\"time\" value={interview.endTime} onChange={(e) => setInterview({ ...interview, endTime: e.target.value })} />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"included_participants\">\r\n        <h3>Included Participants</h3>\r\n\r\n        {interview.participants.length ? (\r\n          <div className=\"participants_table\">\r\n            <div className=\"header\">\r\n              <div className=\"p_id\">Participant Id</div>\r\n              <div className=\"p_name\">Participant Name</div>\r\n              <div className=\"p_email\">Participant Email</div>\r\n              <div className=\"p_remove\">Remove Participant</div>\r\n            </div>\r\n\r\n            {interview.participants.map((participant) => {\r\n              return (\r\n                <div className=\"data\" key={participant.userId}>\r\n                  <div className=\"p_id\">{participant.userId}</div>\r\n                  <div className=\"p_name\">{participant.name}</div>\r\n                  <div className=\"p_email\">{participant.email}</div>\r\n                  <div className=\"p_remove\" onClick={(e) => deleteParticipant(participant)}>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                      <path\r\n                        strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\"\r\n                        strokeWidth={2}\r\n                        d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"\r\n                      />\r\n                    </svg>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        ) : (\r\n          <p className=\"no_participants\">There are no participants in this interview yet!</p>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"included_participants\">\r\n        <h3>Add Participants</h3>\r\n\r\n        {participants.length > 0 ? (\r\n          <div className=\"participants_table\">\r\n            <div className=\"header\">\r\n              <div className=\"p_id\">Participant Id</div>\r\n              <div className=\"p_name\">Participant Name</div>\r\n              <div className=\"p_email\">Participant Email</div>\r\n              <div className=\"p_remove\">Add Participant</div>\r\n            </div>\r\n\r\n            {participants.map((participant) => {\r\n              return (\r\n                <div className=\"data\" key={participant.userId}>\r\n                  <div className=\"p_id\">{participant.userId}</div>\r\n                  <div className=\"p_name\">{participant.name}</div>\r\n                  <div className=\"p_email\">{participant.email}</div>\r\n                  <div className=\"p_remove\" style={{ color: \"green\" }} onClick={(e) => addParticipant(participant)}>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\r\n                    </svg>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        ) : (\r\n          <p className=\"no_participants\">There are no more participants available!</p>\r\n        )}\r\n      </div>\r\n\r\n      <button className=\"schedule_interview_now\" onClick={scheduleInterview}>\r\n        {interview._id ? \"Reschedule Interview\" : \"Schedule Interview\"}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ScheduleInterview;\r\n","import \"./App.css\";\nimport { Route, Routes } from \"react-router-dom\";\nimport HomePage from \"./Components/Homepage\";\nimport ScheduleInterview from \"./Components/ScheduleInterview\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1 className=\"main_title\">Interview Scheduling Portal</h1>\n      <Routes>\n        <Route path=\"/\" element={<HomePage />} />\n        <Route path=\"/scheduleInterview\" element={<ScheduleInterview />} />\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter basename=\"/frontend-interview-portal\">\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}